Terminals unused in grammar

    CHAR
    DEFAULT
    DO


Grammar

    0 $accept: program $end

    1 $@1: ε

    2 $@2: ε

    3 program: $@1 dec_stmts $@2 stmts

    4 dec_stmts: dec_stmt dec_stmts
    5          | ε

    6 stmts: stmt stmts
    7      | ε

    8 dec_stmt: var_dec
    9         | const_dec
   10         | func_dec

   11 $@3: ε

   12 const_dec: CONST ID AS $@3 EXPRESSION

   13 $@4: ε

   14 const_dec: CONST ID ':' TYPE AS $@4 EXPRESSION

   15 const_val: val_REAL
   16          | val_INTEGER
   17          | val_STR
   18          | val_BOOL

   19 TYPE: INT
   20     | BOOL
   21     | STRING
   22     | REAL

   23 var_dec: VAR ID ':' TYPE

   24 $@5: ε

   25 var_dec: VAR ID ':' TYPE AS $@5 EXPRESSION

   26 $@6: ε

   27 var_dec: VAR ID AS $@6 EXPRESSION
   28        | VAR ID ':' ARRAY val_INTEGER '.' '.' val_INTEGER OF TYPE

   29 $@7: ε

   30 func_dec: FUNCTION ID '(' args ')' ':' TYPE $@7 func_stmts END ID

   31 $@8: ε

   32 func_dec: PROCEDURE ID '(' args ')' $@8 func_stmts END ID

   33 func_stmts: func_stmt func_stmts
   34           | ε

   35 func_stmt: var_dec
   36          | const_dec
   37          | stmt

   38 args: arg ',' args
   39     | arg
   40     | ε

   41 arg: ID ':' TYPE

   42 stmt: BLOCK_stmt
   43     | simple_stmt
   44     | conditional_stmt
   45     | loop_stmt

   46 $@9: ε

   47 BLOCK_stmt: BEG $@9 func_stmts END

   48 simple_stmt: ID AS EXPRESSION

   49 $@10: ε

   50 simple_stmt: PUT $@10 EXPRESSION
   51            | GET ID
   52            | RESULT EXPRESSION
   53            | RETURN
   54            | EXIT_STMT
   55            | SKIP
   56            | proc_inv

   57 EXIT_STMT: EXIT
   58          | EXIT WHEN EXPRESSION

   59 EXPRESSION: EXPRESSION '+' EXPRESSION
   60           | EXPRESSION '-' EXPRESSION
   61           | EXPRESSION '*' EXPRESSION
   62           | EXPRESSION '/' EXPRESSION
   63           | '-' EXPRESSION
   64           | EXPRESSION MOD EXPRESSION
   65           | EXPRESSION '>' EXPRESSION
   66           | EXPRESSION '<' EXPRESSION
   67           | EXPRESSION '=' EXPRESSION
   68           | EXPRESSION NE EXPRESSION
   69           | EXPRESSION LE EXPRESSION
   70           | EXPRESSION GE EXPRESSION
   71           | EXPRESSION AND EXPRESSION
   72           | EXPRESSION OR EXPRESSION
   73           | NOT EXPRESSION
   74           | '(' EXPRESSION ')'
   75           | const_val
   76           | ID
   77           | ID '[' EXPRESSION ']'
   78           | func_inv

   79 func_inv: ID '(' actual_params ')'

   80 proc_inv: ID '(' actual_params ')'

   81 actual_params: actual_param ',' actual_params
   82              | actual_param
   83              | ε

   84 actual_param: EXPRESSION

   85 $@11: ε

   86 conditional_stmt: IF EXPRESSION THEN $@11 func_stmts ELSE_stmt

   87 $@12: ε

   88 ELSE_stmt: ELSE $@12 func_stmts END IF
   89          | END IF

   90 $@13: ε

   91 $@14: ε

   92 loop_stmt: LOOP $@13 func_stmts $@14 END LOOP

   93 $@15: ε

   94 $@16: ε

   95 loop_stmt: FOR opt_r ID ':' EXPRESSION '.' '.' EXPRESSION $@15 func_stmts $@16 END FOR

   96 opt_r: DECREASING
   97      | ε


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 30 32 74 79 80
    ')' (41) 30 32 74 79 80
    '*' (42) 61
    '+' (43) 59
    ',' (44) 38 81
    '-' (45) 60 63
    '.' (46) 28 95
    '/' (47) 62
    ':' (58) 14 23 25 28 30 41 95
    '<' (60) 66
    '=' (61) 67
    '>' (62) 65
    '[' (91) 77
    ']' (93) 77
    error (256)
    AS (258) 12 14 25 27 48
    VAR (259) 23 25 27 28
    CONST (260) 12 14
    FUNCTION (261) 30
    BOOL (262) 20
    REAL (263) 22
    INT (264) 19
    STRING (265) 21
    ARRAY (266) 28
    OF (267) 28
    CHAR (268)
    MOD (269) 64
    AND (270) 71
    OR (271) 72
    NOT (272) 73
    DECREASING (273) 96
    DEFAULT (274)
    DO (275)
    ELSE (276) 88
    END (277) 30 32 47 88 89 92 95
    EXIT (278) 57 58
    FOR (279) 95
    GET (280) 51
    IF (281) 86 88 89
    LOOP (282) 92
    PUT (283) 50
    PROCEDURE (284) 32
    RESULT (285) 52
    RETURN (286) 53
    SKIP (287) 55
    THEN (288) 86
    WHEN (289) 58
    BEG (290) 47
    LE (291) 69
    GE (292) 70
    NE (293) 68
    ID <s_v> (294) 12 14 23 25 27 28 30 32 41 48 51 76 77 79 80 95
    val_STR <s_v> (295) 17
    val_INTEGER <i_v> (296) 16 28
    val_REAL <r_v> (297) 15
    val_BOOL <b_v> (298) 18
    UMINUS (299)


Nonterminals, with rules where they appear

    $accept (59)
        on left: 0
    program (60)
        on left: 3
        on right: 0
    $@1 (61)
        on left: 1
        on right: 3
    $@2 (62)
        on left: 2
        on right: 3
    dec_stmts (63)
        on left: 4 5
        on right: 3 4
    stmts (64)
        on left: 6 7
        on right: 3 6
    dec_stmt (65)
        on left: 8 9 10
        on right: 4
    const_dec (66)
        on left: 12 14
        on right: 9 36
    $@3 (67)
        on left: 11
        on right: 12
    $@4 (68)
        on left: 13
        on right: 14
    const_val <Inf> (69)
        on left: 15 16 17 18
        on right: 75
    TYPE <d_t> (70)
        on left: 19 20 21 22
        on right: 14 23 25 28 30 41
    var_dec (71)
        on left: 23 25 27 28
        on right: 8 35
    $@5 (72)
        on left: 24
        on right: 25
    $@6 (73)
        on left: 26
        on right: 27
    func_dec (74)
        on left: 30 32
        on right: 10
    $@7 (75)
        on left: 29
        on right: 30
    $@8 (76)
        on left: 31
        on right: 32
    func_stmts (77)
        on left: 33 34
        on right: 30 32 33 47 86 88 92 95
    func_stmt (78)
        on left: 35 36 37
        on right: 33
    args (79)
        on left: 38 39 40
        on right: 30 32 38
    arg (80)
        on left: 41
        on right: 38 39
    stmt (81)
        on left: 42 43 44 45
        on right: 6 37
    BLOCK_stmt (82)
        on left: 47
        on right: 42
    $@9 (83)
        on left: 46
        on right: 47
    simple_stmt (84)
        on left: 48 50 51 52 53 54 55 56
        on right: 43
    $@10 (85)
        on left: 49
        on right: 50
    EXIT_STMT (86)
        on left: 57 58
        on right: 54
    EXPRESSION <Inf> (87)
        on left: 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
        on right: 12 14 25 27 48 50 52 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 77 84 86 95
    func_inv <Inf> (88)
        on left: 79
        on right: 78
    proc_inv (89)
        on left: 80
        on right: 56
    actual_params (90)
        on left: 81 82 83
        on right: 79 80 81
    actual_param (91)
        on left: 84
        on right: 81 82
    conditional_stmt (92)
        on left: 86
        on right: 44
    $@11 (93)
        on left: 85
        on right: 86
    ELSE_stmt (94)
        on left: 88 89
        on right: 86
    $@12 (95)
        on left: 87
        on right: 88
    loop_stmt (96)
        on left: 92 95
        on right: 45
    $@13 (97)
        on left: 90
        on right: 92
    $@14 (98)
        on left: 91
        on right: 92
    $@15 (99)
        on left: 93
        on right: 95
    $@16 (100)
        on left: 94
        on right: 95
    opt_r <b_v> (101)
        on left: 96 97
        on right: 95


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    3 program: $@1 • dec_stmts $@2 stmts

    VAR        shift, and go to state 4
    CONST      shift, and go to state 5
    FUNCTION   shift, and go to state 6
    PROCEDURE  shift, and go to state 7

    $default  reduce using rule 5 (dec_stmts)

    dec_stmts  go to state 8
    dec_stmt   go to state 9
    const_dec  go to state 10
    var_dec    go to state 11
    func_dec   go to state 12


State 3

    0 $accept: program $end •

    $default  accept


State 4

   23 var_dec: VAR • ID ':' TYPE
   25        | VAR • ID ':' TYPE AS $@5 EXPRESSION
   27        | VAR • ID AS $@6 EXPRESSION
   28        | VAR • ID ':' ARRAY val_INTEGER '.' '.' val_INTEGER OF TYPE

    ID  shift, and go to state 13


State 5

   12 const_dec: CONST • ID AS $@3 EXPRESSION
   14          | CONST • ID ':' TYPE AS $@4 EXPRESSION

    ID  shift, and go to state 14


State 6

   30 func_dec: FUNCTION • ID '(' args ')' ':' TYPE $@7 func_stmts END ID

    ID  shift, and go to state 15


State 7

   32 func_dec: PROCEDURE • ID '(' args ')' $@8 func_stmts END ID

    ID  shift, and go to state 16


State 8

    3 program: $@1 dec_stmts • $@2 stmts

    $default  reduce using rule 2 ($@2)

    $@2  go to state 17


State 9

    4 dec_stmts: dec_stmt • dec_stmts

    VAR        shift, and go to state 4
    CONST      shift, and go to state 5
    FUNCTION   shift, and go to state 6
    PROCEDURE  shift, and go to state 7

    $default  reduce using rule 5 (dec_stmts)

    dec_stmts  go to state 18
    dec_stmt   go to state 9
    const_dec  go to state 10
    var_dec    go to state 11
    func_dec   go to state 12


State 10

    9 dec_stmt: const_dec •

    $default  reduce using rule 9 (dec_stmt)


State 11

    8 dec_stmt: var_dec •

    $default  reduce using rule 8 (dec_stmt)


State 12

   10 dec_stmt: func_dec •

    $default  reduce using rule 10 (dec_stmt)


State 13

   23 var_dec: VAR ID • ':' TYPE
   25        | VAR ID • ':' TYPE AS $@5 EXPRESSION
   27        | VAR ID • AS $@6 EXPRESSION
   28        | VAR ID • ':' ARRAY val_INTEGER '.' '.' val_INTEGER OF TYPE

    AS   shift, and go to state 19
    ':'  shift, and go to state 20


State 14

   12 const_dec: CONST ID • AS $@3 EXPRESSION
   14          | CONST ID • ':' TYPE AS $@4 EXPRESSION

    AS   shift, and go to state 21
    ':'  shift, and go to state 22


State 15

   30 func_dec: FUNCTION ID • '(' args ')' ':' TYPE $@7 func_stmts END ID

    '('  shift, and go to state 23


State 16

   32 func_dec: PROCEDURE ID • '(' args ')' $@8 func_stmts END ID

    '('  shift, and go to state 24


State 17

    3 program: $@1 dec_stmts $@2 • stmts

    EXIT    shift, and go to state 25
    FOR     shift, and go to state 26
    GET     shift, and go to state 27
    IF      shift, and go to state 28
    LOOP    shift, and go to state 29
    PUT     shift, and go to state 30
    RESULT  shift, and go to state 31
    RETURN  shift, and go to state 32
    SKIP    shift, and go to state 33
    BEG     shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 7 (stmts)

    stmts             go to state 36
    stmt              go to state 37
    BLOCK_stmt        go to state 38
    simple_stmt       go to state 39
    EXIT_STMT         go to state 40
    proc_inv          go to state 41
    conditional_stmt  go to state 42
    loop_stmt         go to state 43


State 18

    4 dec_stmts: dec_stmt dec_stmts •

    $default  reduce using rule 4 (dec_stmts)


State 19

   27 var_dec: VAR ID AS • $@6 EXPRESSION

    $default  reduce using rule 26 ($@6)

    $@6  go to state 44


State 20

   23 var_dec: VAR ID ':' • TYPE
   25        | VAR ID ':' • TYPE AS $@5 EXPRESSION
   28        | VAR ID ':' • ARRAY val_INTEGER '.' '.' val_INTEGER OF TYPE

    BOOL    shift, and go to state 45
    REAL    shift, and go to state 46
    INT     shift, and go to state 47
    STRING  shift, and go to state 48
    ARRAY   shift, and go to state 49

    TYPE  go to state 50


State 21

   12 const_dec: CONST ID AS • $@3 EXPRESSION

    $default  reduce using rule 11 ($@3)

    $@3  go to state 51


State 22

   14 const_dec: CONST ID ':' • TYPE AS $@4 EXPRESSION

    BOOL    shift, and go to state 45
    REAL    shift, and go to state 46
    INT     shift, and go to state 47
    STRING  shift, and go to state 48

    TYPE  go to state 52


State 23

   30 func_dec: FUNCTION ID '(' • args ')' ':' TYPE $@7 func_stmts END ID

    ID  shift, and go to state 53

    $default  reduce using rule 40 (args)

    args  go to state 54
    arg   go to state 55


State 24

   32 func_dec: PROCEDURE ID '(' • args ')' $@8 func_stmts END ID

    ID  shift, and go to state 53

    $default  reduce using rule 40 (args)

    args  go to state 56
    arg   go to state 55


State 25

   57 EXIT_STMT: EXIT •
   58          | EXIT • WHEN EXPRESSION

    WHEN  shift, and go to state 57

    $default  reduce using rule 57 (EXIT_STMT)


State 26

   95 loop_stmt: FOR • opt_r ID ':' EXPRESSION '.' '.' EXPRESSION $@15 func_stmts $@16 END FOR

    DECREASING  shift, and go to state 58

    $default  reduce using rule 97 (opt_r)

    opt_r  go to state 59


State 27

   51 simple_stmt: GET • ID

    ID  shift, and go to state 60


State 28

   86 conditional_stmt: IF • EXPRESSION THEN $@11 func_stmts ELSE_stmt

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 70
    func_inv    go to state 71


State 29

   92 loop_stmt: LOOP • $@13 func_stmts $@14 END LOOP

    $default  reduce using rule 90 ($@13)

    $@13  go to state 72


State 30

   50 simple_stmt: PUT • $@10 EXPRESSION

    $default  reduce using rule 49 ($@10)

    $@10  go to state 73


State 31

   52 simple_stmt: RESULT • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 74
    func_inv    go to state 71


State 32

   53 simple_stmt: RETURN •

    $default  reduce using rule 53 (simple_stmt)


State 33

   55 simple_stmt: SKIP •

    $default  reduce using rule 55 (simple_stmt)


State 34

   47 BLOCK_stmt: BEG • $@9 func_stmts END

    $default  reduce using rule 46 ($@9)

    $@9  go to state 75


State 35

   48 simple_stmt: ID • AS EXPRESSION
   80 proc_inv: ID • '(' actual_params ')'

    AS   shift, and go to state 76
    '('  shift, and go to state 77


State 36

    3 program: $@1 dec_stmts $@2 stmts •

    $default  reduce using rule 3 (program)


State 37

    6 stmts: stmt • stmts

    EXIT    shift, and go to state 25
    FOR     shift, and go to state 26
    GET     shift, and go to state 27
    IF      shift, and go to state 28
    LOOP    shift, and go to state 29
    PUT     shift, and go to state 30
    RESULT  shift, and go to state 31
    RETURN  shift, and go to state 32
    SKIP    shift, and go to state 33
    BEG     shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 7 (stmts)

    stmts             go to state 78
    stmt              go to state 37
    BLOCK_stmt        go to state 38
    simple_stmt       go to state 39
    EXIT_STMT         go to state 40
    proc_inv          go to state 41
    conditional_stmt  go to state 42
    loop_stmt         go to state 43


State 38

   42 stmt: BLOCK_stmt •

    $default  reduce using rule 42 (stmt)


State 39

   43 stmt: simple_stmt •

    $default  reduce using rule 43 (stmt)


State 40

   54 simple_stmt: EXIT_STMT •

    $default  reduce using rule 54 (simple_stmt)


State 41

   56 simple_stmt: proc_inv •

    $default  reduce using rule 56 (simple_stmt)


State 42

   44 stmt: conditional_stmt •

    $default  reduce using rule 44 (stmt)


State 43

   45 stmt: loop_stmt •

    $default  reduce using rule 45 (stmt)


State 44

   27 var_dec: VAR ID AS $@6 • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 79
    func_inv    go to state 71


State 45

   20 TYPE: BOOL •

    $default  reduce using rule 20 (TYPE)


State 46

   22 TYPE: REAL •

    $default  reduce using rule 22 (TYPE)


State 47

   19 TYPE: INT •

    $default  reduce using rule 19 (TYPE)


State 48

   21 TYPE: STRING •

    $default  reduce using rule 21 (TYPE)


State 49

   28 var_dec: VAR ID ':' ARRAY • val_INTEGER '.' '.' val_INTEGER OF TYPE

    val_INTEGER  shift, and go to state 80


State 50

   23 var_dec: VAR ID ':' TYPE •
   25        | VAR ID ':' TYPE • AS $@5 EXPRESSION

    AS  shift, and go to state 81

    $default  reduce using rule 23 (var_dec)


State 51

   12 const_dec: CONST ID AS $@3 • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 82
    func_inv    go to state 71


State 52

   14 const_dec: CONST ID ':' TYPE • AS $@4 EXPRESSION

    AS  shift, and go to state 83


State 53

   41 arg: ID • ':' TYPE

    ':'  shift, and go to state 84


State 54

   30 func_dec: FUNCTION ID '(' args • ')' ':' TYPE $@7 func_stmts END ID

    ')'  shift, and go to state 85


State 55

   38 args: arg • ',' args
   39     | arg •

    ','  shift, and go to state 86

    $default  reduce using rule 39 (args)


State 56

   32 func_dec: PROCEDURE ID '(' args • ')' $@8 func_stmts END ID

    ')'  shift, and go to state 87


State 57

   58 EXIT_STMT: EXIT WHEN • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 88
    func_inv    go to state 71


State 58

   96 opt_r: DECREASING •

    $default  reduce using rule 96 (opt_r)


State 59

   95 loop_stmt: FOR opt_r • ID ':' EXPRESSION '.' '.' EXPRESSION $@15 func_stmts $@16 END FOR

    ID  shift, and go to state 89


State 60

   51 simple_stmt: GET ID •

    $default  reduce using rule 51 (simple_stmt)


State 61

   73 EXPRESSION: NOT • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 90
    func_inv    go to state 71


State 62

   76 EXPRESSION: ID •
   77           | ID • '[' EXPRESSION ']'
   79 func_inv: ID • '(' actual_params ')'

    '('  shift, and go to state 91
    '['  shift, and go to state 92

    $default  reduce using rule 76 (EXPRESSION)


State 63

   17 const_val: val_STR •

    $default  reduce using rule 17 (const_val)


State 64

   16 const_val: val_INTEGER •

    $default  reduce using rule 16 (const_val)


State 65

   15 const_val: val_REAL •

    $default  reduce using rule 15 (const_val)


State 66

   18 const_val: val_BOOL •

    $default  reduce using rule 18 (const_val)


State 67

   63 EXPRESSION: '-' • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 93
    func_inv    go to state 71


State 68

   74 EXPRESSION: '(' • EXPRESSION ')'

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 94
    func_inv    go to state 71


State 69

   75 EXPRESSION: const_val •

    $default  reduce using rule 75 (EXPRESSION)


State 70

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION
   86 conditional_stmt: IF EXPRESSION • THEN $@11 func_stmts ELSE_stmt

    MOD   shift, and go to state 95
    AND   shift, and go to state 96
    OR    shift, and go to state 97
    THEN  shift, and go to state 98
    LE    shift, and go to state 99
    GE    shift, and go to state 100
    NE    shift, and go to state 101
    '<'   shift, and go to state 102
    '='   shift, and go to state 103
    '>'   shift, and go to state 104
    '-'   shift, and go to state 105
    '+'   shift, and go to state 106
    '*'   shift, and go to state 107
    '/'   shift, and go to state 108


State 71

   78 EXPRESSION: func_inv •

    $default  reduce using rule 78 (EXPRESSION)


State 72

   92 loop_stmt: LOOP $@13 • func_stmts $@14 END LOOP

    VAR     shift, and go to state 4
    CONST   shift, and go to state 5
    EXIT    shift, and go to state 25
    FOR     shift, and go to state 26
    GET     shift, and go to state 27
    IF      shift, and go to state 28
    LOOP    shift, and go to state 29
    PUT     shift, and go to state 30
    RESULT  shift, and go to state 31
    RETURN  shift, and go to state 32
    SKIP    shift, and go to state 33
    BEG     shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 34 (func_stmts)

    const_dec         go to state 109
    var_dec           go to state 110
    func_stmts        go to state 111
    func_stmt         go to state 112
    stmt              go to state 113
    BLOCK_stmt        go to state 38
    simple_stmt       go to state 39
    EXIT_STMT         go to state 40
    proc_inv          go to state 41
    conditional_stmt  go to state 42
    loop_stmt         go to state 43


State 73

   50 simple_stmt: PUT $@10 • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 114
    func_inv    go to state 71


State 74

   52 simple_stmt: RESULT EXPRESSION •
   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 95
    AND  shift, and go to state 96
    OR   shift, and go to state 97
    LE   shift, and go to state 99
    GE   shift, and go to state 100
    NE   shift, and go to state 101
    '<'  shift, and go to state 102
    '='  shift, and go to state 103
    '>'  shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 52 (simple_stmt)


State 75

   47 BLOCK_stmt: BEG $@9 • func_stmts END

    VAR     shift, and go to state 4
    CONST   shift, and go to state 5
    EXIT    shift, and go to state 25
    FOR     shift, and go to state 26
    GET     shift, and go to state 27
    IF      shift, and go to state 28
    LOOP    shift, and go to state 29
    PUT     shift, and go to state 30
    RESULT  shift, and go to state 31
    RETURN  shift, and go to state 32
    SKIP    shift, and go to state 33
    BEG     shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 34 (func_stmts)

    const_dec         go to state 109
    var_dec           go to state 110
    func_stmts        go to state 115
    func_stmt         go to state 112
    stmt              go to state 113
    BLOCK_stmt        go to state 38
    simple_stmt       go to state 39
    EXIT_STMT         go to state 40
    proc_inv          go to state 41
    conditional_stmt  go to state 42
    loop_stmt         go to state 43


State 76

   48 simple_stmt: ID AS • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 116
    func_inv    go to state 71


State 77

   80 proc_inv: ID '(' • actual_params ')'

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    $default  reduce using rule 83 (actual_params)

    const_val      go to state 69
    EXPRESSION     go to state 117
    func_inv       go to state 71
    actual_params  go to state 118
    actual_param   go to state 119


State 78

    6 stmts: stmt stmts •

    $default  reduce using rule 6 (stmts)


State 79

   27 var_dec: VAR ID AS $@6 EXPRESSION •
   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 95
    AND  shift, and go to state 96
    OR   shift, and go to state 97
    LE   shift, and go to state 99
    GE   shift, and go to state 100
    NE   shift, and go to state 101
    '<'  shift, and go to state 102
    '='  shift, and go to state 103
    '>'  shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 27 (var_dec)


State 80

   28 var_dec: VAR ID ':' ARRAY val_INTEGER • '.' '.' val_INTEGER OF TYPE

    '.'  shift, and go to state 120


State 81

   25 var_dec: VAR ID ':' TYPE AS • $@5 EXPRESSION

    $default  reduce using rule 24 ($@5)

    $@5  go to state 121


State 82

   12 const_dec: CONST ID AS $@3 EXPRESSION •
   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 95
    AND  shift, and go to state 96
    OR   shift, and go to state 97
    LE   shift, and go to state 99
    GE   shift, and go to state 100
    NE   shift, and go to state 101
    '<'  shift, and go to state 102
    '='  shift, and go to state 103
    '>'  shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 12 (const_dec)


State 83

   14 const_dec: CONST ID ':' TYPE AS • $@4 EXPRESSION

    $default  reduce using rule 13 ($@4)

    $@4  go to state 122


State 84

   41 arg: ID ':' • TYPE

    BOOL    shift, and go to state 45
    REAL    shift, and go to state 46
    INT     shift, and go to state 47
    STRING  shift, and go to state 48

    TYPE  go to state 123


State 85

   30 func_dec: FUNCTION ID '(' args ')' • ':' TYPE $@7 func_stmts END ID

    ':'  shift, and go to state 124


State 86

   38 args: arg ',' • args

    ID  shift, and go to state 53

    $default  reduce using rule 40 (args)

    args  go to state 125
    arg   go to state 55


State 87

   32 func_dec: PROCEDURE ID '(' args ')' • $@8 func_stmts END ID

    $default  reduce using rule 31 ($@8)

    $@8  go to state 126


State 88

   58 EXIT_STMT: EXIT WHEN EXPRESSION •
   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 95
    AND  shift, and go to state 96
    OR   shift, and go to state 97
    LE   shift, and go to state 99
    GE   shift, and go to state 100
    NE   shift, and go to state 101
    '<'  shift, and go to state 102
    '='  shift, and go to state 103
    '>'  shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 58 (EXIT_STMT)


State 89

   95 loop_stmt: FOR opt_r ID • ':' EXPRESSION '.' '.' EXPRESSION $@15 func_stmts $@16 END FOR

    ':'  shift, and go to state 127


State 90

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION
   73           | NOT EXPRESSION •

    MOD  shift, and go to state 95
    LE   shift, and go to state 99
    GE   shift, and go to state 100
    NE   shift, and go to state 101
    '<'  shift, and go to state 102
    '='  shift, and go to state 103
    '>'  shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 73 (EXPRESSION)


State 91

   79 func_inv: ID '(' • actual_params ')'

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    $default  reduce using rule 83 (actual_params)

    const_val      go to state 69
    EXPRESSION     go to state 117
    func_inv       go to state 71
    actual_params  go to state 128
    actual_param   go to state 119


State 92

   77 EXPRESSION: ID '[' • EXPRESSION ']'

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 129
    func_inv    go to state 71


State 93

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   63           | '-' EXPRESSION •
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    $default  reduce using rule 63 (EXPRESSION)


State 94

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION
   74           | '(' EXPRESSION • ')'

    MOD  shift, and go to state 95
    AND  shift, and go to state 96
    OR   shift, and go to state 97
    LE   shift, and go to state 99
    GE   shift, and go to state 100
    NE   shift, and go to state 101
    '<'  shift, and go to state 102
    '='  shift, and go to state 103
    '>'  shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108
    ')'  shift, and go to state 130


State 95

   64 EXPRESSION: EXPRESSION MOD • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 131
    func_inv    go to state 71


State 96

   71 EXPRESSION: EXPRESSION AND • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 132
    func_inv    go to state 71


State 97

   72 EXPRESSION: EXPRESSION OR • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 133
    func_inv    go to state 71


State 98

   86 conditional_stmt: IF EXPRESSION THEN • $@11 func_stmts ELSE_stmt

    $default  reduce using rule 85 ($@11)

    $@11  go to state 134


State 99

   69 EXPRESSION: EXPRESSION LE • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 135
    func_inv    go to state 71


State 100

   70 EXPRESSION: EXPRESSION GE • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 136
    func_inv    go to state 71


State 101

   68 EXPRESSION: EXPRESSION NE • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 137
    func_inv    go to state 71


State 102

   66 EXPRESSION: EXPRESSION '<' • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 138
    func_inv    go to state 71


State 103

   67 EXPRESSION: EXPRESSION '=' • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 139
    func_inv    go to state 71


State 104

   65 EXPRESSION: EXPRESSION '>' • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 140
    func_inv    go to state 71


State 105

   60 EXPRESSION: EXPRESSION '-' • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 141
    func_inv    go to state 71


State 106

   59 EXPRESSION: EXPRESSION '+' • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 142
    func_inv    go to state 71


State 107

   61 EXPRESSION: EXPRESSION '*' • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 143
    func_inv    go to state 71


State 108

   62 EXPRESSION: EXPRESSION '/' • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 144
    func_inv    go to state 71


State 109

   36 func_stmt: const_dec •

    $default  reduce using rule 36 (func_stmt)


State 110

   35 func_stmt: var_dec •

    $default  reduce using rule 35 (func_stmt)


State 111

   92 loop_stmt: LOOP $@13 func_stmts • $@14 END LOOP

    $default  reduce using rule 91 ($@14)

    $@14  go to state 145


State 112

   33 func_stmts: func_stmt • func_stmts

    VAR     shift, and go to state 4
    CONST   shift, and go to state 5
    EXIT    shift, and go to state 25
    FOR     shift, and go to state 26
    GET     shift, and go to state 27
    IF      shift, and go to state 28
    LOOP    shift, and go to state 29
    PUT     shift, and go to state 30
    RESULT  shift, and go to state 31
    RETURN  shift, and go to state 32
    SKIP    shift, and go to state 33
    BEG     shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 34 (func_stmts)

    const_dec         go to state 109
    var_dec           go to state 110
    func_stmts        go to state 146
    func_stmt         go to state 112
    stmt              go to state 113
    BLOCK_stmt        go to state 38
    simple_stmt       go to state 39
    EXIT_STMT         go to state 40
    proc_inv          go to state 41
    conditional_stmt  go to state 42
    loop_stmt         go to state 43


State 113

   37 func_stmt: stmt •

    $default  reduce using rule 37 (func_stmt)


State 114

   50 simple_stmt: PUT $@10 EXPRESSION •
   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 95
    AND  shift, and go to state 96
    OR   shift, and go to state 97
    LE   shift, and go to state 99
    GE   shift, and go to state 100
    NE   shift, and go to state 101
    '<'  shift, and go to state 102
    '='  shift, and go to state 103
    '>'  shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 50 (simple_stmt)


State 115

   47 BLOCK_stmt: BEG $@9 func_stmts • END

    END  shift, and go to state 147


State 116

   48 simple_stmt: ID AS EXPRESSION •
   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 95
    AND  shift, and go to state 96
    OR   shift, and go to state 97
    LE   shift, and go to state 99
    GE   shift, and go to state 100
    NE   shift, and go to state 101
    '<'  shift, and go to state 102
    '='  shift, and go to state 103
    '>'  shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 48 (simple_stmt)


State 117

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION
   84 actual_param: EXPRESSION •

    MOD  shift, and go to state 95
    AND  shift, and go to state 96
    OR   shift, and go to state 97
    LE   shift, and go to state 99
    GE   shift, and go to state 100
    NE   shift, and go to state 101
    '<'  shift, and go to state 102
    '='  shift, and go to state 103
    '>'  shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 84 (actual_param)


State 118

   80 proc_inv: ID '(' actual_params • ')'

    ')'  shift, and go to state 148


State 119

   81 actual_params: actual_param • ',' actual_params
   82              | actual_param •

    ','  shift, and go to state 149

    $default  reduce using rule 82 (actual_params)


State 120

   28 var_dec: VAR ID ':' ARRAY val_INTEGER '.' • '.' val_INTEGER OF TYPE

    '.'  shift, and go to state 150


State 121

   25 var_dec: VAR ID ':' TYPE AS $@5 • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 151
    func_inv    go to state 71


State 122

   14 const_dec: CONST ID ':' TYPE AS $@4 • EXPRESSION

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 152
    func_inv    go to state 71


State 123

   41 arg: ID ':' TYPE •

    $default  reduce using rule 41 (arg)


State 124

   30 func_dec: FUNCTION ID '(' args ')' ':' • TYPE $@7 func_stmts END ID

    BOOL    shift, and go to state 45
    REAL    shift, and go to state 46
    INT     shift, and go to state 47
    STRING  shift, and go to state 48

    TYPE  go to state 153


State 125

   38 args: arg ',' args •

    $default  reduce using rule 38 (args)


State 126

   32 func_dec: PROCEDURE ID '(' args ')' $@8 • func_stmts END ID

    VAR     shift, and go to state 4
    CONST   shift, and go to state 5
    EXIT    shift, and go to state 25
    FOR     shift, and go to state 26
    GET     shift, and go to state 27
    IF      shift, and go to state 28
    LOOP    shift, and go to state 29
    PUT     shift, and go to state 30
    RESULT  shift, and go to state 31
    RETURN  shift, and go to state 32
    SKIP    shift, and go to state 33
    BEG     shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 34 (func_stmts)

    const_dec         go to state 109
    var_dec           go to state 110
    func_stmts        go to state 154
    func_stmt         go to state 112
    stmt              go to state 113
    BLOCK_stmt        go to state 38
    simple_stmt       go to state 39
    EXIT_STMT         go to state 40
    proc_inv          go to state 41
    conditional_stmt  go to state 42
    loop_stmt         go to state 43


State 127

   95 loop_stmt: FOR opt_r ID ':' • EXPRESSION '.' '.' EXPRESSION $@15 func_stmts $@16 END FOR

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 155
    func_inv    go to state 71


State 128

   79 func_inv: ID '(' actual_params • ')'

    ')'  shift, and go to state 156


State 129

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION
   77           | ID '[' EXPRESSION • ']'

    MOD  shift, and go to state 95
    AND  shift, and go to state 96
    OR   shift, and go to state 97
    LE   shift, and go to state 99
    GE   shift, and go to state 100
    NE   shift, and go to state 101
    '<'  shift, and go to state 102
    '='  shift, and go to state 103
    '>'  shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108
    ']'  shift, and go to state 157


State 130

   74 EXPRESSION: '(' EXPRESSION ')' •

    $default  reduce using rule 74 (EXPRESSION)


State 131

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   64           | EXPRESSION MOD EXPRESSION •
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    $default  reduce using rule 64 (EXPRESSION)


State 132

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   71           | EXPRESSION AND EXPRESSION •
   72           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 95
    LE   shift, and go to state 99
    GE   shift, and go to state 100
    NE   shift, and go to state 101
    '<'  shift, and go to state 102
    '='  shift, and go to state 103
    '>'  shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 71 (EXPRESSION)


State 133

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION
   72           | EXPRESSION OR EXPRESSION •

    MOD  shift, and go to state 95
    AND  shift, and go to state 96
    LE   shift, and go to state 99
    GE   shift, and go to state 100
    NE   shift, and go to state 101
    '<'  shift, and go to state 102
    '='  shift, and go to state 103
    '>'  shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 72 (EXPRESSION)


State 134

   86 conditional_stmt: IF EXPRESSION THEN $@11 • func_stmts ELSE_stmt

    VAR     shift, and go to state 4
    CONST   shift, and go to state 5
    EXIT    shift, and go to state 25
    FOR     shift, and go to state 26
    GET     shift, and go to state 27
    IF      shift, and go to state 28
    LOOP    shift, and go to state 29
    PUT     shift, and go to state 30
    RESULT  shift, and go to state 31
    RETURN  shift, and go to state 32
    SKIP    shift, and go to state 33
    BEG     shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 34 (func_stmts)

    const_dec         go to state 109
    var_dec           go to state 110
    func_stmts        go to state 158
    func_stmt         go to state 112
    stmt              go to state 113
    BLOCK_stmt        go to state 38
    simple_stmt       go to state 39
    EXIT_STMT         go to state 40
    proc_inv          go to state 41
    conditional_stmt  go to state 42
    loop_stmt         go to state 43


State 135

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   69           | EXPRESSION LE EXPRESSION •
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 95
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 69 (EXPRESSION)


State 136

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   70           | EXPRESSION GE EXPRESSION •
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 95
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 70 (EXPRESSION)


State 137

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   68           | EXPRESSION NE EXPRESSION •
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 95
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 68 (EXPRESSION)


State 138

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   66           | EXPRESSION '<' EXPRESSION •
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 95
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 66 (EXPRESSION)


State 139

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   67           | EXPRESSION '=' EXPRESSION •
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 95
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 67 (EXPRESSION)


State 140

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   65           | EXPRESSION '>' EXPRESSION •
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 95
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 65 (EXPRESSION)


State 141

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   60           | EXPRESSION '-' EXPRESSION •
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 95
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 60 (EXPRESSION)


State 142

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   59           | EXPRESSION '+' EXPRESSION •
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 95
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 59 (EXPRESSION)


State 143

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   61           | EXPRESSION '*' EXPRESSION •
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    $default  reduce using rule 61 (EXPRESSION)


State 144

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   62           | EXPRESSION '/' EXPRESSION •
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    $default  reduce using rule 62 (EXPRESSION)


State 145

   92 loop_stmt: LOOP $@13 func_stmts $@14 • END LOOP

    END  shift, and go to state 159


State 146

   33 func_stmts: func_stmt func_stmts •

    $default  reduce using rule 33 (func_stmts)


State 147

   47 BLOCK_stmt: BEG $@9 func_stmts END •

    $default  reduce using rule 47 (BLOCK_stmt)


State 148

   80 proc_inv: ID '(' actual_params ')' •

    $default  reduce using rule 80 (proc_inv)


State 149

   81 actual_params: actual_param ',' • actual_params

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    $default  reduce using rule 83 (actual_params)

    const_val      go to state 69
    EXPRESSION     go to state 117
    func_inv       go to state 71
    actual_params  go to state 160
    actual_param   go to state 119


State 150

   28 var_dec: VAR ID ':' ARRAY val_INTEGER '.' '.' • val_INTEGER OF TYPE

    val_INTEGER  shift, and go to state 161


State 151

   25 var_dec: VAR ID ':' TYPE AS $@5 EXPRESSION •
   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 95
    AND  shift, and go to state 96
    OR   shift, and go to state 97
    LE   shift, and go to state 99
    GE   shift, and go to state 100
    NE   shift, and go to state 101
    '<'  shift, and go to state 102
    '='  shift, and go to state 103
    '>'  shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 25 (var_dec)


State 152

   14 const_dec: CONST ID ':' TYPE AS $@4 EXPRESSION •
   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 95
    AND  shift, and go to state 96
    OR   shift, and go to state 97
    LE   shift, and go to state 99
    GE   shift, and go to state 100
    NE   shift, and go to state 101
    '<'  shift, and go to state 102
    '='  shift, and go to state 103
    '>'  shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 14 (const_dec)


State 153

   30 func_dec: FUNCTION ID '(' args ')' ':' TYPE • $@7 func_stmts END ID

    $default  reduce using rule 29 ($@7)

    $@7  go to state 162


State 154

   32 func_dec: PROCEDURE ID '(' args ')' $@8 func_stmts • END ID

    END  shift, and go to state 163


State 155

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION
   95 loop_stmt: FOR opt_r ID ':' EXPRESSION • '.' '.' EXPRESSION $@15 func_stmts $@16 END FOR

    MOD  shift, and go to state 95
    AND  shift, and go to state 96
    OR   shift, and go to state 97
    LE   shift, and go to state 99
    GE   shift, and go to state 100
    NE   shift, and go to state 101
    '<'  shift, and go to state 102
    '='  shift, and go to state 103
    '>'  shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108
    '.'  shift, and go to state 164


State 156

   79 func_inv: ID '(' actual_params ')' •

    $default  reduce using rule 79 (func_inv)


State 157

   77 EXPRESSION: ID '[' EXPRESSION ']' •

    $default  reduce using rule 77 (EXPRESSION)


State 158

   86 conditional_stmt: IF EXPRESSION THEN $@11 func_stmts • ELSE_stmt

    ELSE  shift, and go to state 165
    END   shift, and go to state 166

    ELSE_stmt  go to state 167


State 159

   92 loop_stmt: LOOP $@13 func_stmts $@14 END • LOOP

    LOOP  shift, and go to state 168


State 160

   81 actual_params: actual_param ',' actual_params •

    $default  reduce using rule 81 (actual_params)


State 161

   28 var_dec: VAR ID ':' ARRAY val_INTEGER '.' '.' val_INTEGER • OF TYPE

    OF  shift, and go to state 169


State 162

   30 func_dec: FUNCTION ID '(' args ')' ':' TYPE $@7 • func_stmts END ID

    VAR     shift, and go to state 4
    CONST   shift, and go to state 5
    EXIT    shift, and go to state 25
    FOR     shift, and go to state 26
    GET     shift, and go to state 27
    IF      shift, and go to state 28
    LOOP    shift, and go to state 29
    PUT     shift, and go to state 30
    RESULT  shift, and go to state 31
    RETURN  shift, and go to state 32
    SKIP    shift, and go to state 33
    BEG     shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 34 (func_stmts)

    const_dec         go to state 109
    var_dec           go to state 110
    func_stmts        go to state 170
    func_stmt         go to state 112
    stmt              go to state 113
    BLOCK_stmt        go to state 38
    simple_stmt       go to state 39
    EXIT_STMT         go to state 40
    proc_inv          go to state 41
    conditional_stmt  go to state 42
    loop_stmt         go to state 43


State 163

   32 func_dec: PROCEDURE ID '(' args ')' $@8 func_stmts END • ID

    ID  shift, and go to state 171


State 164

   95 loop_stmt: FOR opt_r ID ':' EXPRESSION '.' • '.' EXPRESSION $@15 func_stmts $@16 END FOR

    '.'  shift, and go to state 172


State 165

   88 ELSE_stmt: ELSE • $@12 func_stmts END IF

    $default  reduce using rule 87 ($@12)

    $@12  go to state 173


State 166

   89 ELSE_stmt: END • IF

    IF  shift, and go to state 174


State 167

   86 conditional_stmt: IF EXPRESSION THEN $@11 func_stmts ELSE_stmt •

    $default  reduce using rule 86 (conditional_stmt)


State 168

   92 loop_stmt: LOOP $@13 func_stmts $@14 END LOOP •

    $default  reduce using rule 92 (loop_stmt)


State 169

   28 var_dec: VAR ID ':' ARRAY val_INTEGER '.' '.' val_INTEGER OF • TYPE

    BOOL    shift, and go to state 45
    REAL    shift, and go to state 46
    INT     shift, and go to state 47
    STRING  shift, and go to state 48

    TYPE  go to state 175


State 170

   30 func_dec: FUNCTION ID '(' args ')' ':' TYPE $@7 func_stmts • END ID

    END  shift, and go to state 176


State 171

   32 func_dec: PROCEDURE ID '(' args ')' $@8 func_stmts END ID •

    $default  reduce using rule 32 (func_dec)


State 172

   95 loop_stmt: FOR opt_r ID ':' EXPRESSION '.' '.' • EXPRESSION $@15 func_stmts $@16 END FOR

    NOT          shift, and go to state 61
    ID           shift, and go to state 62
    val_STR      shift, and go to state 63
    val_INTEGER  shift, and go to state 64
    val_REAL     shift, and go to state 65
    val_BOOL     shift, and go to state 66
    '-'          shift, and go to state 67
    '('          shift, and go to state 68

    const_val   go to state 69
    EXPRESSION  go to state 177
    func_inv    go to state 71


State 173

   88 ELSE_stmt: ELSE $@12 • func_stmts END IF

    VAR     shift, and go to state 4
    CONST   shift, and go to state 5
    EXIT    shift, and go to state 25
    FOR     shift, and go to state 26
    GET     shift, and go to state 27
    IF      shift, and go to state 28
    LOOP    shift, and go to state 29
    PUT     shift, and go to state 30
    RESULT  shift, and go to state 31
    RETURN  shift, and go to state 32
    SKIP    shift, and go to state 33
    BEG     shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 34 (func_stmts)

    const_dec         go to state 109
    var_dec           go to state 110
    func_stmts        go to state 178
    func_stmt         go to state 112
    stmt              go to state 113
    BLOCK_stmt        go to state 38
    simple_stmt       go to state 39
    EXIT_STMT         go to state 40
    proc_inv          go to state 41
    conditional_stmt  go to state 42
    loop_stmt         go to state 43


State 174

   89 ELSE_stmt: END IF •

    $default  reduce using rule 89 (ELSE_stmt)


State 175

   28 var_dec: VAR ID ':' ARRAY val_INTEGER '.' '.' val_INTEGER OF TYPE •

    $default  reduce using rule 28 (var_dec)


State 176

   30 func_dec: FUNCTION ID '(' args ')' ':' TYPE $@7 func_stmts END • ID

    ID  shift, and go to state 179


State 177

   59 EXPRESSION: EXPRESSION • '+' EXPRESSION
   60           | EXPRESSION • '-' EXPRESSION
   61           | EXPRESSION • '*' EXPRESSION
   62           | EXPRESSION • '/' EXPRESSION
   64           | EXPRESSION • MOD EXPRESSION
   65           | EXPRESSION • '>' EXPRESSION
   66           | EXPRESSION • '<' EXPRESSION
   67           | EXPRESSION • '=' EXPRESSION
   68           | EXPRESSION • NE EXPRESSION
   69           | EXPRESSION • LE EXPRESSION
   70           | EXPRESSION • GE EXPRESSION
   71           | EXPRESSION • AND EXPRESSION
   72           | EXPRESSION • OR EXPRESSION
   95 loop_stmt: FOR opt_r ID ':' EXPRESSION '.' '.' EXPRESSION • $@15 func_stmts $@16 END FOR

    MOD  shift, and go to state 95
    AND  shift, and go to state 96
    OR   shift, and go to state 97
    LE   shift, and go to state 99
    GE   shift, and go to state 100
    NE   shift, and go to state 101
    '<'  shift, and go to state 102
    '='  shift, and go to state 103
    '>'  shift, and go to state 104
    '-'  shift, and go to state 105
    '+'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 93 ($@15)

    $@15  go to state 180


State 178

   88 ELSE_stmt: ELSE $@12 func_stmts • END IF

    END  shift, and go to state 181


State 179

   30 func_dec: FUNCTION ID '(' args ')' ':' TYPE $@7 func_stmts END ID •

    $default  reduce using rule 30 (func_dec)


State 180

   95 loop_stmt: FOR opt_r ID ':' EXPRESSION '.' '.' EXPRESSION $@15 • func_stmts $@16 END FOR

    VAR     shift, and go to state 4
    CONST   shift, and go to state 5
    EXIT    shift, and go to state 25
    FOR     shift, and go to state 26
    GET     shift, and go to state 27
    IF      shift, and go to state 28
    LOOP    shift, and go to state 29
    PUT     shift, and go to state 30
    RESULT  shift, and go to state 31
    RETURN  shift, and go to state 32
    SKIP    shift, and go to state 33
    BEG     shift, and go to state 34
    ID      shift, and go to state 35

    $default  reduce using rule 34 (func_stmts)

    const_dec         go to state 109
    var_dec           go to state 110
    func_stmts        go to state 182
    func_stmt         go to state 112
    stmt              go to state 113
    BLOCK_stmt        go to state 38
    simple_stmt       go to state 39
    EXIT_STMT         go to state 40
    proc_inv          go to state 41
    conditional_stmt  go to state 42
    loop_stmt         go to state 43


State 181

   88 ELSE_stmt: ELSE $@12 func_stmts END • IF

    IF  shift, and go to state 183


State 182

   95 loop_stmt: FOR opt_r ID ':' EXPRESSION '.' '.' EXPRESSION $@15 func_stmts • $@16 END FOR

    $default  reduce using rule 94 ($@16)

    $@16  go to state 184


State 183

   88 ELSE_stmt: ELSE $@12 func_stmts END IF •

    $default  reduce using rule 88 (ELSE_stmt)


State 184

   95 loop_stmt: FOR opt_r ID ':' EXPRESSION '.' '.' EXPRESSION $@15 func_stmts $@16 • END FOR

    END  shift, and go to state 185


State 185

   95 loop_stmt: FOR opt_r ID ':' EXPRESSION '.' '.' EXPRESSION $@15 func_stmts $@16 END • FOR

    FOR  shift, and go to state 186


State 186

   95 loop_stmt: FOR opt_r ID ':' EXPRESSION '.' '.' EXPRESSION $@15 func_stmts $@16 END FOR •

    $default  reduce using rule 95 (loop_stmt)
