Terminals unused in grammar

    CHAR
    DEFAULT
    DO


Grammar

    0 $accept: program $end

    1 program: dec_stmts stmts

    2 dec_stmts: dec_stmt dec_stmts
    3          | ε

    4 stmts: stmt stmts
    5      | ε

    6 dec_stmt: var_dec
    7         | const_dec
    8         | func_dec

    9 const_dec: CONST ID AS EXPRESSION
   10          | CONST ID ':' TYPE AS EXPRESSION

   11 const_val: val_REAL
   12          | val_INTEGER
   13          | val_STR
   14          | val_BOOL

   15 TYPE: INT
   16     | BOOL
   17     | STRING
   18     | REAL

   19 var_dec: VAR ID ':' TYPE
   20        | VAR ID ':' TYPE AS EXPRESSION
   21        | VAR ID AS EXPRESSION
   22        | VAR ID ':' ARRAY val_INTEGER '.' '.' val_INTEGER OF TYPE

   23 $@1: ε

   24 func_dec: FUNCTION ID '(' args ')' ':' TYPE $@1 func_stmts END ID

   25 $@2: ε

   26 func_dec: PROCEDURE ID '(' args ')' $@2 func_stmts END ID

   27 func_stmts: func_stmt func_stmts
   28           | ε

   29 func_stmt: var_dec
   30          | const_dec
   31          | stmt

   32 args: arg ',' args
   33     | arg
   34     | ε

   35 arg: ID ':' TYPE

   36 stmt: BLOCK_stmt
   37     | simple_stmt
   38     | conditional_stmt
   39     | loop_stmt

   40 $@3: ε

   41 BLOCK_stmt: BEG $@3 func_stmts END

   42 simple_stmt: ID AS EXPRESSION
   43            | PUT EXPRESSION
   44            | GET ID
   45            | RESULT EXPRESSION
   46            | RETURN
   47            | EXIT_STMT
   48            | SKIP

   49 EXIT_STMT: EXIT
   50          | EXIT WHEN EXPRESSION

   51 EXPRESSION: EXPRESSION '+' EXPRESSION
   52           | EXPRESSION '-' EXPRESSION
   53           | EXPRESSION '*' EXPRESSION
   54           | EXPRESSION '/' EXPRESSION
   55           | '-' EXPRESSION
   56           | EXPRESSION MOD EXPRESSION
   57           | EXPRESSION '>' EXPRESSION
   58           | EXPRESSION '<' EXPRESSION
   59           | EXPRESSION '=' EXPRESSION
   60           | EXPRESSION NE EXPRESSION
   61           | EXPRESSION LE EXPRESSION
   62           | EXPRESSION GE EXPRESSION
   63           | EXPRESSION AND EXPRESSION
   64           | EXPRESSION OR EXPRESSION
   65           | NOT EXPRESSION
   66           | '(' EXPRESSION ')'
   67           | const_val
   68           | ID
   69           | ID '[' EXPRESSION ']'
   70           | func_inv

   71 func_inv: ID '(' actual_params ')'

   72 actual_params: actual_param ',' actual_params
   73              | actual_param
   74              | ε

   75 actual_param: EXPRESSION

   76 conditional_stmt: IF EXPRESSION THEN func_stmts ELSE func_stmts END IF
   77                 | IF EXPRESSION THEN func_stmts END IF

   78 $@4: ε

   79 loop_stmt: LOOP $@4 func_stmts END LOOP

   80 $@5: ε

   81 loop_stmt: FOR opt_r ID ':' EXPRESSION '.' '.' EXPRESSION $@5 func_stmts END FOR

   82 opt_r: DECREASING
   83      | ε


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 24 26 66 71
    ')' (41) 24 26 66 71
    '*' (42) 53
    '+' (43) 51
    ',' (44) 32 72
    '-' (45) 52 55
    '.' (46) 22 81
    '/' (47) 54
    ':' (58) 10 19 20 22 24 35 81
    '<' (60) 58
    '=' (61) 59
    '>' (62) 57
    '[' (91) 69
    ']' (93) 69
    error (256)
    AS (258) 9 10 20 21 42
    VAR (259) 19 20 21 22
    CONST (260) 9 10
    FUNCTION (261) 24
    BOOL (262) 16
    REAL (263) 18
    INT (264) 15
    STRING (265) 17
    ARRAY (266) 22
    OF (267) 22
    CHAR (268)
    MOD (269) 56
    AND (270) 63
    OR (271) 64
    NOT (272) 65
    DECREASING (273) 82
    DEFAULT (274)
    DO (275)
    ELSE (276) 76
    END (277) 24 26 41 76 77 79 81
    EXIT (278) 49 50
    FOR (279) 81
    GET (280) 44
    IF (281) 76 77
    LOOP (282) 79
    PUT (283) 43
    PROCEDURE (284) 26
    RESULT (285) 45
    RETURN (286) 46
    SKIP (287) 48
    THEN (288) 76 77
    WHEN (289) 50
    BEG (290) 41
    LE (291) 61
    GE (292) 62
    NE (293) 60
    ID <s_v> (294) 9 10 19 20 21 22 24 26 35 42 44 68 69 71 81
    val_STR <s_v> (295) 13
    val_INTEGER <i_v> (296) 12 22
    val_REAL <r_v> (297) 11
    val_BOOL <b_v> (298) 14
    UMINUS (299)


Nonterminals, with rules where they appear

    $accept (59)
        on left: 0
    program (60)
        on left: 1
        on right: 0
    dec_stmts (61)
        on left: 2 3
        on right: 1 2
    stmts (62)
        on left: 4 5
        on right: 1 4
    dec_stmt (63)
        on left: 6 7 8
        on right: 2
    const_dec (64)
        on left: 9 10
        on right: 7 30
    const_val <Inf> (65)
        on left: 11 12 13 14
        on right: 67
    TYPE <d_t> (66)
        on left: 15 16 17 18
        on right: 10 19 20 22 24 35
    var_dec (67)
        on left: 19 20 21 22
        on right: 6 29
    func_dec (68)
        on left: 24 26
        on right: 8
    $@1 (69)
        on left: 23
        on right: 24
    $@2 (70)
        on left: 25
        on right: 26
    func_stmts (71)
        on left: 27 28
        on right: 24 26 27 41 76 77 79 81
    func_stmt (72)
        on left: 29 30 31
        on right: 27
    args (73)
        on left: 32 33 34
        on right: 24 26 32
    arg (74)
        on left: 35
        on right: 32 33
    stmt (75)
        on left: 36 37 38 39
        on right: 4 31
    BLOCK_stmt (76)
        on left: 41
        on right: 36
    $@3 (77)
        on left: 40
        on right: 41
    simple_stmt (78)
        on left: 42 43 44 45 46 47 48
        on right: 37
    EXIT_STMT (79)
        on left: 49 50
        on right: 47
    EXPRESSION <Inf> (80)
        on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
        on right: 9 10 20 21 42 43 45 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 69 75 76 77 81
    func_inv <Inf> (81)
        on left: 71
        on right: 70
    actual_params (82)
        on left: 72 73 74
        on right: 71 72
    actual_param (83)
        on left: 75
        on right: 72 73
    conditional_stmt (84)
        on left: 76 77
        on right: 38
    loop_stmt (85)
        on left: 79 81
        on right: 39
    $@4 (86)
        on left: 78
        on right: 79
    $@5 (87)
        on left: 80
        on right: 81
    opt_r (88)
        on left: 82 83
        on right: 81


State 0

    0 $accept: • program $end

    VAR        shift, and go to state 1
    CONST      shift, and go to state 2
    FUNCTION   shift, and go to state 3
    PROCEDURE  shift, and go to state 4

    $default  reduce using rule 3 (dec_stmts)

    program    go to state 5
    dec_stmts  go to state 6
    dec_stmt   go to state 7
    const_dec  go to state 8
    var_dec    go to state 9
    func_dec   go to state 10


State 1

   19 var_dec: VAR • ID ':' TYPE
   20        | VAR • ID ':' TYPE AS EXPRESSION
   21        | VAR • ID AS EXPRESSION
   22        | VAR • ID ':' ARRAY val_INTEGER '.' '.' val_INTEGER OF TYPE

    ID  shift, and go to state 11


State 2

    9 const_dec: CONST • ID AS EXPRESSION
   10          | CONST • ID ':' TYPE AS EXPRESSION

    ID  shift, and go to state 12


State 3

   24 func_dec: FUNCTION • ID '(' args ')' ':' TYPE $@1 func_stmts END ID

    ID  shift, and go to state 13


State 4

   26 func_dec: PROCEDURE • ID '(' args ')' $@2 func_stmts END ID

    ID  shift, and go to state 14


State 5

    0 $accept: program • $end

    $end  shift, and go to state 15


State 6

    1 program: dec_stmts • stmts

    EXIT    shift, and go to state 16
    FOR     shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    LOOP    shift, and go to state 20
    PUT     shift, and go to state 21
    RESULT  shift, and go to state 22
    RETURN  shift, and go to state 23
    SKIP    shift, and go to state 24
    BEG     shift, and go to state 25
    ID      shift, and go to state 26

    $default  reduce using rule 5 (stmts)

    stmts             go to state 27
    stmt              go to state 28
    BLOCK_stmt        go to state 29
    simple_stmt       go to state 30
    EXIT_STMT         go to state 31
    conditional_stmt  go to state 32
    loop_stmt         go to state 33


State 7

    2 dec_stmts: dec_stmt • dec_stmts

    VAR        shift, and go to state 1
    CONST      shift, and go to state 2
    FUNCTION   shift, and go to state 3
    PROCEDURE  shift, and go to state 4

    $default  reduce using rule 3 (dec_stmts)

    dec_stmts  go to state 34
    dec_stmt   go to state 7
    const_dec  go to state 8
    var_dec    go to state 9
    func_dec   go to state 10


State 8

    7 dec_stmt: const_dec •

    $default  reduce using rule 7 (dec_stmt)


State 9

    6 dec_stmt: var_dec •

    $default  reduce using rule 6 (dec_stmt)


State 10

    8 dec_stmt: func_dec •

    $default  reduce using rule 8 (dec_stmt)


State 11

   19 var_dec: VAR ID • ':' TYPE
   20        | VAR ID • ':' TYPE AS EXPRESSION
   21        | VAR ID • AS EXPRESSION
   22        | VAR ID • ':' ARRAY val_INTEGER '.' '.' val_INTEGER OF TYPE

    AS   shift, and go to state 35
    ':'  shift, and go to state 36


State 12

    9 const_dec: CONST ID • AS EXPRESSION
   10          | CONST ID • ':' TYPE AS EXPRESSION

    AS   shift, and go to state 37
    ':'  shift, and go to state 38


State 13

   24 func_dec: FUNCTION ID • '(' args ')' ':' TYPE $@1 func_stmts END ID

    '('  shift, and go to state 39


State 14

   26 func_dec: PROCEDURE ID • '(' args ')' $@2 func_stmts END ID

    '('  shift, and go to state 40


State 15

    0 $accept: program $end •

    $default  accept


State 16

   49 EXIT_STMT: EXIT •
   50          | EXIT • WHEN EXPRESSION

    WHEN  shift, and go to state 41

    $default  reduce using rule 49 (EXIT_STMT)


State 17

   81 loop_stmt: FOR • opt_r ID ':' EXPRESSION '.' '.' EXPRESSION $@5 func_stmts END FOR

    DECREASING  shift, and go to state 42

    $default  reduce using rule 83 (opt_r)

    opt_r  go to state 43


State 18

   44 simple_stmt: GET • ID

    ID  shift, and go to state 44


State 19

   76 conditional_stmt: IF • EXPRESSION THEN func_stmts ELSE func_stmts END IF
   77                 | IF • EXPRESSION THEN func_stmts END IF

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 54
    func_inv    go to state 55


State 20

   79 loop_stmt: LOOP • $@4 func_stmts END LOOP

    $default  reduce using rule 78 ($@4)

    $@4  go to state 56


State 21

   43 simple_stmt: PUT • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 57
    func_inv    go to state 55


State 22

   45 simple_stmt: RESULT • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 58
    func_inv    go to state 55


State 23

   46 simple_stmt: RETURN •

    $default  reduce using rule 46 (simple_stmt)


State 24

   48 simple_stmt: SKIP •

    $default  reduce using rule 48 (simple_stmt)


State 25

   41 BLOCK_stmt: BEG • $@3 func_stmts END

    $default  reduce using rule 40 ($@3)

    $@3  go to state 59


State 26

   42 simple_stmt: ID • AS EXPRESSION

    AS  shift, and go to state 60


State 27

    1 program: dec_stmts stmts •

    $default  reduce using rule 1 (program)


State 28

    4 stmts: stmt • stmts

    EXIT    shift, and go to state 16
    FOR     shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    LOOP    shift, and go to state 20
    PUT     shift, and go to state 21
    RESULT  shift, and go to state 22
    RETURN  shift, and go to state 23
    SKIP    shift, and go to state 24
    BEG     shift, and go to state 25
    ID      shift, and go to state 26

    $default  reduce using rule 5 (stmts)

    stmts             go to state 61
    stmt              go to state 28
    BLOCK_stmt        go to state 29
    simple_stmt       go to state 30
    EXIT_STMT         go to state 31
    conditional_stmt  go to state 32
    loop_stmt         go to state 33


State 29

   36 stmt: BLOCK_stmt •

    $default  reduce using rule 36 (stmt)


State 30

   37 stmt: simple_stmt •

    $default  reduce using rule 37 (stmt)


State 31

   47 simple_stmt: EXIT_STMT •

    $default  reduce using rule 47 (simple_stmt)


State 32

   38 stmt: conditional_stmt •

    $default  reduce using rule 38 (stmt)


State 33

   39 stmt: loop_stmt •

    $default  reduce using rule 39 (stmt)


State 34

    2 dec_stmts: dec_stmt dec_stmts •

    $default  reduce using rule 2 (dec_stmts)


State 35

   21 var_dec: VAR ID AS • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 62
    func_inv    go to state 55


State 36

   19 var_dec: VAR ID ':' • TYPE
   20        | VAR ID ':' • TYPE AS EXPRESSION
   22        | VAR ID ':' • ARRAY val_INTEGER '.' '.' val_INTEGER OF TYPE

    BOOL    shift, and go to state 63
    REAL    shift, and go to state 64
    INT     shift, and go to state 65
    STRING  shift, and go to state 66
    ARRAY   shift, and go to state 67

    TYPE  go to state 68


State 37

    9 const_dec: CONST ID AS • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 69
    func_inv    go to state 55


State 38

   10 const_dec: CONST ID ':' • TYPE AS EXPRESSION

    BOOL    shift, and go to state 63
    REAL    shift, and go to state 64
    INT     shift, and go to state 65
    STRING  shift, and go to state 66

    TYPE  go to state 70


State 39

   24 func_dec: FUNCTION ID '(' • args ')' ':' TYPE $@1 func_stmts END ID

    ID  shift, and go to state 71

    $default  reduce using rule 34 (args)

    args  go to state 72
    arg   go to state 73


State 40

   26 func_dec: PROCEDURE ID '(' • args ')' $@2 func_stmts END ID

    ID  shift, and go to state 71

    $default  reduce using rule 34 (args)

    args  go to state 74
    arg   go to state 73


State 41

   50 EXIT_STMT: EXIT WHEN • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 75
    func_inv    go to state 55


State 42

   82 opt_r: DECREASING •

    $default  reduce using rule 82 (opt_r)


State 43

   81 loop_stmt: FOR opt_r • ID ':' EXPRESSION '.' '.' EXPRESSION $@5 func_stmts END FOR

    ID  shift, and go to state 76


State 44

   44 simple_stmt: GET ID •

    $default  reduce using rule 44 (simple_stmt)


State 45

   65 EXPRESSION: NOT • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 77
    func_inv    go to state 55


State 46

   68 EXPRESSION: ID •
   69           | ID • '[' EXPRESSION ']'
   71 func_inv: ID • '(' actual_params ')'

    '('  shift, and go to state 78
    '['  shift, and go to state 79

    $default  reduce using rule 68 (EXPRESSION)


State 47

   13 const_val: val_STR •

    $default  reduce using rule 13 (const_val)


State 48

   12 const_val: val_INTEGER •

    $default  reduce using rule 12 (const_val)


State 49

   11 const_val: val_REAL •

    $default  reduce using rule 11 (const_val)


State 50

   14 const_val: val_BOOL •

    $default  reduce using rule 14 (const_val)


State 51

   55 EXPRESSION: '-' • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 80
    func_inv    go to state 55


State 52

   66 EXPRESSION: '(' • EXPRESSION ')'

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 81
    func_inv    go to state 55


State 53

   67 EXPRESSION: const_val •

    $default  reduce using rule 67 (EXPRESSION)


State 54

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION
   76 conditional_stmt: IF EXPRESSION • THEN func_stmts ELSE func_stmts END IF
   77                 | IF EXPRESSION • THEN func_stmts END IF

    MOD   shift, and go to state 82
    AND   shift, and go to state 83
    OR    shift, and go to state 84
    THEN  shift, and go to state 85
    LE    shift, and go to state 86
    GE    shift, and go to state 87
    NE    shift, and go to state 88
    '<'   shift, and go to state 89
    '='   shift, and go to state 90
    '>'   shift, and go to state 91
    '-'   shift, and go to state 92
    '+'   shift, and go to state 93
    '*'   shift, and go to state 94
    '/'   shift, and go to state 95


State 55

   70 EXPRESSION: func_inv •

    $default  reduce using rule 70 (EXPRESSION)


State 56

   79 loop_stmt: LOOP $@4 • func_stmts END LOOP

    VAR     shift, and go to state 1
    CONST   shift, and go to state 2
    EXIT    shift, and go to state 16
    FOR     shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    LOOP    shift, and go to state 20
    PUT     shift, and go to state 21
    RESULT  shift, and go to state 22
    RETURN  shift, and go to state 23
    SKIP    shift, and go to state 24
    BEG     shift, and go to state 25
    ID      shift, and go to state 26

    $default  reduce using rule 28 (func_stmts)

    const_dec         go to state 96
    var_dec           go to state 97
    func_stmts        go to state 98
    func_stmt         go to state 99
    stmt              go to state 100
    BLOCK_stmt        go to state 29
    simple_stmt       go to state 30
    EXIT_STMT         go to state 31
    conditional_stmt  go to state 32
    loop_stmt         go to state 33


State 57

   43 simple_stmt: PUT EXPRESSION •
   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 82
    AND  shift, and go to state 83
    OR   shift, and go to state 84
    LE   shift, and go to state 86
    GE   shift, and go to state 87
    NE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '>'  shift, and go to state 91
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 43 (simple_stmt)


State 58

   45 simple_stmt: RESULT EXPRESSION •
   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 82
    AND  shift, and go to state 83
    OR   shift, and go to state 84
    LE   shift, and go to state 86
    GE   shift, and go to state 87
    NE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '>'  shift, and go to state 91
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 45 (simple_stmt)


State 59

   41 BLOCK_stmt: BEG $@3 • func_stmts END

    VAR     shift, and go to state 1
    CONST   shift, and go to state 2
    EXIT    shift, and go to state 16
    FOR     shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    LOOP    shift, and go to state 20
    PUT     shift, and go to state 21
    RESULT  shift, and go to state 22
    RETURN  shift, and go to state 23
    SKIP    shift, and go to state 24
    BEG     shift, and go to state 25
    ID      shift, and go to state 26

    $default  reduce using rule 28 (func_stmts)

    const_dec         go to state 96
    var_dec           go to state 97
    func_stmts        go to state 101
    func_stmt         go to state 99
    stmt              go to state 100
    BLOCK_stmt        go to state 29
    simple_stmt       go to state 30
    EXIT_STMT         go to state 31
    conditional_stmt  go to state 32
    loop_stmt         go to state 33


State 60

   42 simple_stmt: ID AS • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 102
    func_inv    go to state 55


State 61

    4 stmts: stmt stmts •

    $default  reduce using rule 4 (stmts)


State 62

   21 var_dec: VAR ID AS EXPRESSION •
   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 82
    AND  shift, and go to state 83
    OR   shift, and go to state 84
    LE   shift, and go to state 86
    GE   shift, and go to state 87
    NE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '>'  shift, and go to state 91
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 21 (var_dec)


State 63

   16 TYPE: BOOL •

    $default  reduce using rule 16 (TYPE)


State 64

   18 TYPE: REAL •

    $default  reduce using rule 18 (TYPE)


State 65

   15 TYPE: INT •

    $default  reduce using rule 15 (TYPE)


State 66

   17 TYPE: STRING •

    $default  reduce using rule 17 (TYPE)


State 67

   22 var_dec: VAR ID ':' ARRAY • val_INTEGER '.' '.' val_INTEGER OF TYPE

    val_INTEGER  shift, and go to state 103


State 68

   19 var_dec: VAR ID ':' TYPE •
   20        | VAR ID ':' TYPE • AS EXPRESSION

    AS  shift, and go to state 104

    $default  reduce using rule 19 (var_dec)


State 69

    9 const_dec: CONST ID AS EXPRESSION •
   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 82
    AND  shift, and go to state 83
    OR   shift, and go to state 84
    LE   shift, and go to state 86
    GE   shift, and go to state 87
    NE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '>'  shift, and go to state 91
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 9 (const_dec)


State 70

   10 const_dec: CONST ID ':' TYPE • AS EXPRESSION

    AS  shift, and go to state 105


State 71

   35 arg: ID • ':' TYPE

    ':'  shift, and go to state 106


State 72

   24 func_dec: FUNCTION ID '(' args • ')' ':' TYPE $@1 func_stmts END ID

    ')'  shift, and go to state 107


State 73

   32 args: arg • ',' args
   33     | arg •

    ','  shift, and go to state 108

    $default  reduce using rule 33 (args)


State 74

   26 func_dec: PROCEDURE ID '(' args • ')' $@2 func_stmts END ID

    ')'  shift, and go to state 109


State 75

   50 EXIT_STMT: EXIT WHEN EXPRESSION •
   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 82
    AND  shift, and go to state 83
    OR   shift, and go to state 84
    LE   shift, and go to state 86
    GE   shift, and go to state 87
    NE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '>'  shift, and go to state 91
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 50 (EXIT_STMT)


State 76

   81 loop_stmt: FOR opt_r ID • ':' EXPRESSION '.' '.' EXPRESSION $@5 func_stmts END FOR

    ':'  shift, and go to state 110


State 77

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION
   65           | NOT EXPRESSION •

    MOD  shift, and go to state 82
    LE   shift, and go to state 86
    GE   shift, and go to state 87
    NE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '>'  shift, and go to state 91
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 65 (EXPRESSION)


State 78

   71 func_inv: ID '(' • actual_params ')'

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    $default  reduce using rule 74 (actual_params)

    const_val      go to state 53
    EXPRESSION     go to state 111
    func_inv       go to state 55
    actual_params  go to state 112
    actual_param   go to state 113


State 79

   69 EXPRESSION: ID '[' • EXPRESSION ']'

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 114
    func_inv    go to state 55


State 80

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   55           | '-' EXPRESSION •
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    $default  reduce using rule 55 (EXPRESSION)


State 81

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION
   66           | '(' EXPRESSION • ')'

    MOD  shift, and go to state 82
    AND  shift, and go to state 83
    OR   shift, and go to state 84
    LE   shift, and go to state 86
    GE   shift, and go to state 87
    NE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '>'  shift, and go to state 91
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    ')'  shift, and go to state 115


State 82

   56 EXPRESSION: EXPRESSION MOD • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 116
    func_inv    go to state 55


State 83

   63 EXPRESSION: EXPRESSION AND • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 117
    func_inv    go to state 55


State 84

   64 EXPRESSION: EXPRESSION OR • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 118
    func_inv    go to state 55


State 85

   76 conditional_stmt: IF EXPRESSION THEN • func_stmts ELSE func_stmts END IF
   77                 | IF EXPRESSION THEN • func_stmts END IF

    VAR     shift, and go to state 1
    CONST   shift, and go to state 2
    EXIT    shift, and go to state 16
    FOR     shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    LOOP    shift, and go to state 20
    PUT     shift, and go to state 21
    RESULT  shift, and go to state 22
    RETURN  shift, and go to state 23
    SKIP    shift, and go to state 24
    BEG     shift, and go to state 25
    ID      shift, and go to state 26

    $default  reduce using rule 28 (func_stmts)

    const_dec         go to state 96
    var_dec           go to state 97
    func_stmts        go to state 119
    func_stmt         go to state 99
    stmt              go to state 100
    BLOCK_stmt        go to state 29
    simple_stmt       go to state 30
    EXIT_STMT         go to state 31
    conditional_stmt  go to state 32
    loop_stmt         go to state 33


State 86

   61 EXPRESSION: EXPRESSION LE • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 120
    func_inv    go to state 55


State 87

   62 EXPRESSION: EXPRESSION GE • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 121
    func_inv    go to state 55


State 88

   60 EXPRESSION: EXPRESSION NE • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 122
    func_inv    go to state 55


State 89

   58 EXPRESSION: EXPRESSION '<' • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 123
    func_inv    go to state 55


State 90

   59 EXPRESSION: EXPRESSION '=' • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 124
    func_inv    go to state 55


State 91

   57 EXPRESSION: EXPRESSION '>' • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 125
    func_inv    go to state 55


State 92

   52 EXPRESSION: EXPRESSION '-' • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 126
    func_inv    go to state 55


State 93

   51 EXPRESSION: EXPRESSION '+' • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 127
    func_inv    go to state 55


State 94

   53 EXPRESSION: EXPRESSION '*' • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 128
    func_inv    go to state 55


State 95

   54 EXPRESSION: EXPRESSION '/' • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 129
    func_inv    go to state 55


State 96

   30 func_stmt: const_dec •

    $default  reduce using rule 30 (func_stmt)


State 97

   29 func_stmt: var_dec •

    $default  reduce using rule 29 (func_stmt)


State 98

   79 loop_stmt: LOOP $@4 func_stmts • END LOOP

    END  shift, and go to state 130


State 99

   27 func_stmts: func_stmt • func_stmts

    VAR     shift, and go to state 1
    CONST   shift, and go to state 2
    EXIT    shift, and go to state 16
    FOR     shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    LOOP    shift, and go to state 20
    PUT     shift, and go to state 21
    RESULT  shift, and go to state 22
    RETURN  shift, and go to state 23
    SKIP    shift, and go to state 24
    BEG     shift, and go to state 25
    ID      shift, and go to state 26

    $default  reduce using rule 28 (func_stmts)

    const_dec         go to state 96
    var_dec           go to state 97
    func_stmts        go to state 131
    func_stmt         go to state 99
    stmt              go to state 100
    BLOCK_stmt        go to state 29
    simple_stmt       go to state 30
    EXIT_STMT         go to state 31
    conditional_stmt  go to state 32
    loop_stmt         go to state 33


State 100

   31 func_stmt: stmt •

    $default  reduce using rule 31 (func_stmt)


State 101

   41 BLOCK_stmt: BEG $@3 func_stmts • END

    END  shift, and go to state 132


State 102

   42 simple_stmt: ID AS EXPRESSION •
   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 82
    AND  shift, and go to state 83
    OR   shift, and go to state 84
    LE   shift, and go to state 86
    GE   shift, and go to state 87
    NE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '>'  shift, and go to state 91
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 42 (simple_stmt)


State 103

   22 var_dec: VAR ID ':' ARRAY val_INTEGER • '.' '.' val_INTEGER OF TYPE

    '.'  shift, and go to state 133


State 104

   20 var_dec: VAR ID ':' TYPE AS • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 134
    func_inv    go to state 55


State 105

   10 const_dec: CONST ID ':' TYPE AS • EXPRESSION

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 135
    func_inv    go to state 55


State 106

   35 arg: ID ':' • TYPE

    BOOL    shift, and go to state 63
    REAL    shift, and go to state 64
    INT     shift, and go to state 65
    STRING  shift, and go to state 66

    TYPE  go to state 136


State 107

   24 func_dec: FUNCTION ID '(' args ')' • ':' TYPE $@1 func_stmts END ID

    ':'  shift, and go to state 137


State 108

   32 args: arg ',' • args

    ID  shift, and go to state 71

    $default  reduce using rule 34 (args)

    args  go to state 138
    arg   go to state 73


State 109

   26 func_dec: PROCEDURE ID '(' args ')' • $@2 func_stmts END ID

    $default  reduce using rule 25 ($@2)

    $@2  go to state 139


State 110

   81 loop_stmt: FOR opt_r ID ':' • EXPRESSION '.' '.' EXPRESSION $@5 func_stmts END FOR

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 140
    func_inv    go to state 55


State 111

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION
   75 actual_param: EXPRESSION •

    MOD  shift, and go to state 82
    AND  shift, and go to state 83
    OR   shift, and go to state 84
    LE   shift, and go to state 86
    GE   shift, and go to state 87
    NE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '>'  shift, and go to state 91
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 75 (actual_param)


State 112

   71 func_inv: ID '(' actual_params • ')'

    ')'  shift, and go to state 141


State 113

   72 actual_params: actual_param • ',' actual_params
   73              | actual_param •

    ','  shift, and go to state 142

    $default  reduce using rule 73 (actual_params)


State 114

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION
   69           | ID '[' EXPRESSION • ']'

    MOD  shift, and go to state 82
    AND  shift, and go to state 83
    OR   shift, and go to state 84
    LE   shift, and go to state 86
    GE   shift, and go to state 87
    NE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '>'  shift, and go to state 91
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    ']'  shift, and go to state 143


State 115

   66 EXPRESSION: '(' EXPRESSION ')' •

    $default  reduce using rule 66 (EXPRESSION)


State 116

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   56           | EXPRESSION MOD EXPRESSION •
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    $default  reduce using rule 56 (EXPRESSION)


State 117

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   63           | EXPRESSION AND EXPRESSION •
   64           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 82
    LE   shift, and go to state 86
    GE   shift, and go to state 87
    NE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '>'  shift, and go to state 91
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 63 (EXPRESSION)


State 118

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION
   64           | EXPRESSION OR EXPRESSION •

    MOD  shift, and go to state 82
    AND  shift, and go to state 83
    LE   shift, and go to state 86
    GE   shift, and go to state 87
    NE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '>'  shift, and go to state 91
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 64 (EXPRESSION)


State 119

   76 conditional_stmt: IF EXPRESSION THEN func_stmts • ELSE func_stmts END IF
   77                 | IF EXPRESSION THEN func_stmts • END IF

    ELSE  shift, and go to state 144
    END   shift, and go to state 145


State 120

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   61           | EXPRESSION LE EXPRESSION •
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 82
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 61 (EXPRESSION)


State 121

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   62           | EXPRESSION GE EXPRESSION •
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 82
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 62 (EXPRESSION)


State 122

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   60           | EXPRESSION NE EXPRESSION •
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 82
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 60 (EXPRESSION)


State 123

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   58           | EXPRESSION '<' EXPRESSION •
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 82
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 58 (EXPRESSION)


State 124

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   59           | EXPRESSION '=' EXPRESSION •
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 82
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 59 (EXPRESSION)


State 125

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   57           | EXPRESSION '>' EXPRESSION •
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 82
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 57 (EXPRESSION)


State 126

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   52           | EXPRESSION '-' EXPRESSION •
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 82
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 52 (EXPRESSION)


State 127

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   51           | EXPRESSION '+' EXPRESSION •
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 82
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 51 (EXPRESSION)


State 128

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   53           | EXPRESSION '*' EXPRESSION •
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    $default  reduce using rule 53 (EXPRESSION)


State 129

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   54           | EXPRESSION '/' EXPRESSION •
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    $default  reduce using rule 54 (EXPRESSION)


State 130

   79 loop_stmt: LOOP $@4 func_stmts END • LOOP

    LOOP  shift, and go to state 146


State 131

   27 func_stmts: func_stmt func_stmts •

    $default  reduce using rule 27 (func_stmts)


State 132

   41 BLOCK_stmt: BEG $@3 func_stmts END •

    $default  reduce using rule 41 (BLOCK_stmt)


State 133

   22 var_dec: VAR ID ':' ARRAY val_INTEGER '.' • '.' val_INTEGER OF TYPE

    '.'  shift, and go to state 147


State 134

   20 var_dec: VAR ID ':' TYPE AS EXPRESSION •
   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 82
    AND  shift, and go to state 83
    OR   shift, and go to state 84
    LE   shift, and go to state 86
    GE   shift, and go to state 87
    NE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '>'  shift, and go to state 91
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 20 (var_dec)


State 135

   10 const_dec: CONST ID ':' TYPE AS EXPRESSION •
   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION

    MOD  shift, and go to state 82
    AND  shift, and go to state 83
    OR   shift, and go to state 84
    LE   shift, and go to state 86
    GE   shift, and go to state 87
    NE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '>'  shift, and go to state 91
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 10 (const_dec)


State 136

   35 arg: ID ':' TYPE •

    $default  reduce using rule 35 (arg)


State 137

   24 func_dec: FUNCTION ID '(' args ')' ':' • TYPE $@1 func_stmts END ID

    BOOL    shift, and go to state 63
    REAL    shift, and go to state 64
    INT     shift, and go to state 65
    STRING  shift, and go to state 66

    TYPE  go to state 148


State 138

   32 args: arg ',' args •

    $default  reduce using rule 32 (args)


State 139

   26 func_dec: PROCEDURE ID '(' args ')' $@2 • func_stmts END ID

    VAR     shift, and go to state 1
    CONST   shift, and go to state 2
    EXIT    shift, and go to state 16
    FOR     shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    LOOP    shift, and go to state 20
    PUT     shift, and go to state 21
    RESULT  shift, and go to state 22
    RETURN  shift, and go to state 23
    SKIP    shift, and go to state 24
    BEG     shift, and go to state 25
    ID      shift, and go to state 26

    $default  reduce using rule 28 (func_stmts)

    const_dec         go to state 96
    var_dec           go to state 97
    func_stmts        go to state 149
    func_stmt         go to state 99
    stmt              go to state 100
    BLOCK_stmt        go to state 29
    simple_stmt       go to state 30
    EXIT_STMT         go to state 31
    conditional_stmt  go to state 32
    loop_stmt         go to state 33


State 140

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION
   81 loop_stmt: FOR opt_r ID ':' EXPRESSION • '.' '.' EXPRESSION $@5 func_stmts END FOR

    MOD  shift, and go to state 82
    AND  shift, and go to state 83
    OR   shift, and go to state 84
    LE   shift, and go to state 86
    GE   shift, and go to state 87
    NE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '>'  shift, and go to state 91
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '.'  shift, and go to state 150


State 141

   71 func_inv: ID '(' actual_params ')' •

    $default  reduce using rule 71 (func_inv)


State 142

   72 actual_params: actual_param ',' • actual_params

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    $default  reduce using rule 74 (actual_params)

    const_val      go to state 53
    EXPRESSION     go to state 111
    func_inv       go to state 55
    actual_params  go to state 151
    actual_param   go to state 113


State 143

   69 EXPRESSION: ID '[' EXPRESSION ']' •

    $default  reduce using rule 69 (EXPRESSION)


State 144

   76 conditional_stmt: IF EXPRESSION THEN func_stmts ELSE • func_stmts END IF

    VAR     shift, and go to state 1
    CONST   shift, and go to state 2
    EXIT    shift, and go to state 16
    FOR     shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    LOOP    shift, and go to state 20
    PUT     shift, and go to state 21
    RESULT  shift, and go to state 22
    RETURN  shift, and go to state 23
    SKIP    shift, and go to state 24
    BEG     shift, and go to state 25
    ID      shift, and go to state 26

    $default  reduce using rule 28 (func_stmts)

    const_dec         go to state 96
    var_dec           go to state 97
    func_stmts        go to state 152
    func_stmt         go to state 99
    stmt              go to state 100
    BLOCK_stmt        go to state 29
    simple_stmt       go to state 30
    EXIT_STMT         go to state 31
    conditional_stmt  go to state 32
    loop_stmt         go to state 33


State 145

   77 conditional_stmt: IF EXPRESSION THEN func_stmts END • IF

    IF  shift, and go to state 153


State 146

   79 loop_stmt: LOOP $@4 func_stmts END LOOP •

    $default  reduce using rule 79 (loop_stmt)


State 147

   22 var_dec: VAR ID ':' ARRAY val_INTEGER '.' '.' • val_INTEGER OF TYPE

    val_INTEGER  shift, and go to state 154


State 148

   24 func_dec: FUNCTION ID '(' args ')' ':' TYPE • $@1 func_stmts END ID

    $default  reduce using rule 23 ($@1)

    $@1  go to state 155


State 149

   26 func_dec: PROCEDURE ID '(' args ')' $@2 func_stmts • END ID

    END  shift, and go to state 156


State 150

   81 loop_stmt: FOR opt_r ID ':' EXPRESSION '.' • '.' EXPRESSION $@5 func_stmts END FOR

    '.'  shift, and go to state 157


State 151

   72 actual_params: actual_param ',' actual_params •

    $default  reduce using rule 72 (actual_params)


State 152

   76 conditional_stmt: IF EXPRESSION THEN func_stmts ELSE func_stmts • END IF

    END  shift, and go to state 158


State 153

   77 conditional_stmt: IF EXPRESSION THEN func_stmts END IF •

    $default  reduce using rule 77 (conditional_stmt)


State 154

   22 var_dec: VAR ID ':' ARRAY val_INTEGER '.' '.' val_INTEGER • OF TYPE

    OF  shift, and go to state 159


State 155

   24 func_dec: FUNCTION ID '(' args ')' ':' TYPE $@1 • func_stmts END ID

    VAR     shift, and go to state 1
    CONST   shift, and go to state 2
    EXIT    shift, and go to state 16
    FOR     shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    LOOP    shift, and go to state 20
    PUT     shift, and go to state 21
    RESULT  shift, and go to state 22
    RETURN  shift, and go to state 23
    SKIP    shift, and go to state 24
    BEG     shift, and go to state 25
    ID      shift, and go to state 26

    $default  reduce using rule 28 (func_stmts)

    const_dec         go to state 96
    var_dec           go to state 97
    func_stmts        go to state 160
    func_stmt         go to state 99
    stmt              go to state 100
    BLOCK_stmt        go to state 29
    simple_stmt       go to state 30
    EXIT_STMT         go to state 31
    conditional_stmt  go to state 32
    loop_stmt         go to state 33


State 156

   26 func_dec: PROCEDURE ID '(' args ')' $@2 func_stmts END • ID

    ID  shift, and go to state 161


State 157

   81 loop_stmt: FOR opt_r ID ':' EXPRESSION '.' '.' • EXPRESSION $@5 func_stmts END FOR

    NOT          shift, and go to state 45
    ID           shift, and go to state 46
    val_STR      shift, and go to state 47
    val_INTEGER  shift, and go to state 48
    val_REAL     shift, and go to state 49
    val_BOOL     shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52

    const_val   go to state 53
    EXPRESSION  go to state 162
    func_inv    go to state 55


State 158

   76 conditional_stmt: IF EXPRESSION THEN func_stmts ELSE func_stmts END • IF

    IF  shift, and go to state 163


State 159

   22 var_dec: VAR ID ':' ARRAY val_INTEGER '.' '.' val_INTEGER OF • TYPE

    BOOL    shift, and go to state 63
    REAL    shift, and go to state 64
    INT     shift, and go to state 65
    STRING  shift, and go to state 66

    TYPE  go to state 164


State 160

   24 func_dec: FUNCTION ID '(' args ')' ':' TYPE $@1 func_stmts • END ID

    END  shift, and go to state 165


State 161

   26 func_dec: PROCEDURE ID '(' args ')' $@2 func_stmts END ID •

    $default  reduce using rule 26 (func_dec)


State 162

   51 EXPRESSION: EXPRESSION • '+' EXPRESSION
   52           | EXPRESSION • '-' EXPRESSION
   53           | EXPRESSION • '*' EXPRESSION
   54           | EXPRESSION • '/' EXPRESSION
   56           | EXPRESSION • MOD EXPRESSION
   57           | EXPRESSION • '>' EXPRESSION
   58           | EXPRESSION • '<' EXPRESSION
   59           | EXPRESSION • '=' EXPRESSION
   60           | EXPRESSION • NE EXPRESSION
   61           | EXPRESSION • LE EXPRESSION
   62           | EXPRESSION • GE EXPRESSION
   63           | EXPRESSION • AND EXPRESSION
   64           | EXPRESSION • OR EXPRESSION
   81 loop_stmt: FOR opt_r ID ':' EXPRESSION '.' '.' EXPRESSION • $@5 func_stmts END FOR

    MOD  shift, and go to state 82
    AND  shift, and go to state 83
    OR   shift, and go to state 84
    LE   shift, and go to state 86
    GE   shift, and go to state 87
    NE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '>'  shift, and go to state 91
    '-'  shift, and go to state 92
    '+'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95

    $default  reduce using rule 80 ($@5)

    $@5  go to state 166


State 163

   76 conditional_stmt: IF EXPRESSION THEN func_stmts ELSE func_stmts END IF •

    $default  reduce using rule 76 (conditional_stmt)


State 164

   22 var_dec: VAR ID ':' ARRAY val_INTEGER '.' '.' val_INTEGER OF TYPE •

    $default  reduce using rule 22 (var_dec)


State 165

   24 func_dec: FUNCTION ID '(' args ')' ':' TYPE $@1 func_stmts END • ID

    ID  shift, and go to state 167


State 166

   81 loop_stmt: FOR opt_r ID ':' EXPRESSION '.' '.' EXPRESSION $@5 • func_stmts END FOR

    VAR     shift, and go to state 1
    CONST   shift, and go to state 2
    EXIT    shift, and go to state 16
    FOR     shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    LOOP    shift, and go to state 20
    PUT     shift, and go to state 21
    RESULT  shift, and go to state 22
    RETURN  shift, and go to state 23
    SKIP    shift, and go to state 24
    BEG     shift, and go to state 25
    ID      shift, and go to state 26

    $default  reduce using rule 28 (func_stmts)

    const_dec         go to state 96
    var_dec           go to state 97
    func_stmts        go to state 168
    func_stmt         go to state 99
    stmt              go to state 100
    BLOCK_stmt        go to state 29
    simple_stmt       go to state 30
    EXIT_STMT         go to state 31
    conditional_stmt  go to state 32
    loop_stmt         go to state 33


State 167

   24 func_dec: FUNCTION ID '(' args ')' ':' TYPE $@1 func_stmts END ID •

    $default  reduce using rule 24 (func_dec)


State 168

   81 loop_stmt: FOR opt_r ID ':' EXPRESSION '.' '.' EXPRESSION $@5 func_stmts • END FOR

    END  shift, and go to state 169


State 169

   81 loop_stmt: FOR opt_r ID ':' EXPRESSION '.' '.' EXPRESSION $@5 func_stmts END • FOR

    FOR  shift, and go to state 170


State 170

   81 loop_stmt: FOR opt_r ID ':' EXPRESSION '.' '.' EXPRESSION $@5 func_stmts END FOR •

    $default  reduce using rule 81 (loop_stmt)
